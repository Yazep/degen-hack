import type { Chain, Client, PublicActions, PublicRpcSchema, Transport } from "viem";
import type { SmartContractAccount } from "../account/smartContractAccount.js";
import type { BundlerActions, BundlerRpcSchema } from "../client/decorators/bundlerClient.js";
import type { ClientMiddlewareConfig } from "../client/types.js";
import type { ClientMiddleware } from "./types.js";
export type MiddlewareClient<TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TAccount extends SmartContractAccount | undefined = SmartContractAccount | undefined> = Client<TTransport, TChain, TAccount, [
    ...BundlerRpcSchema,
    ...PublicRpcSchema
], PublicActions & BundlerActions>;
export declare const middlewareActions: (overrides: ClientMiddlewareConfig) => <TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TAccount extends SmartContractAccount | undefined = SmartContractAccount | undefined>(client: MiddlewareClient<TTransport, TChain, TAccount>) => {
    middleware: ClientMiddleware;
};
//# sourceMappingURL=actions.d.ts.map