{"version":3,"file":"gasEstimator.js","sourceRoot":"","sources":["../../../../src/middleware/defaults/gasEstimator.ts"],"names":[],"mappings":";;;AAAA,mDAAsE;AACtE,qDAAuE;AAIhE,MAAM,mBAAmB,GAG9B,CAAC,MAAM,EAAE,EAAE,CACX,KAAK,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,EAAE,EAAE;IACnD,MAAM,OAAO,GAAG,IAAA,sBAAW,EAAC,MAAM,IAAA,4BAAiB,EAAC,MAAM,CAAC,CAAC,CAAC;IAE7D,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,wBAAwB,CACrD,OAAO,EACP,OAAO,CAAC,aAAa,EAAE,CACxB,CAAC;IAEF,MAAM,YAAY,GAAG,IAAA,0CAA8B,EACjD,SAAS,CAAC,YAAY,EACtB,SAAS,EAAE,YAAY,EACvB,UAAU,EAAE,YAAY,CACzB,CAAC;IACF,MAAM,oBAAoB,GAAG,IAAA,0CAA8B,EACzD,SAAS,CAAC,oBAAoB,EAC9B,SAAS,EAAE,oBAAoB,EAC/B,UAAU,EAAE,oBAAoB,CACjC,CAAC;IACF,MAAM,kBAAkB,GAAG,IAAA,0CAA8B,EACvD,SAAS,CAAC,kBAAkB,EAC5B,SAAS,EAAE,kBAAkB,EAC7B,UAAU,EAAE,kBAAkB,CAC/B,CAAC;IAEF,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,MAAM,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;IACnD,MAAM,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;IAC/C,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAhCS,QAAA,mBAAmB,uBAgC5B","sourcesContent":["import { deepHexlify, resolveProperties } from \"../../utils/index.js\";\nimport { applyUserOpOverrideOrFeeOption } from \"../../utils/userop.js\";\nimport type { MiddlewareClient } from \"../actions.js\";\nimport type { ClientMiddlewareFn } from \"../types.js\";\n\nexport const defaultGasEstimator: <C extends MiddlewareClient>(\n  client: C\n) => ClientMiddlewareFn =\n  (client) =>\n  async (struct, { account, overrides, feeOptions }) => {\n    const request = deepHexlify(await resolveProperties(struct));\n\n    const estimates = await client.estimateUserOperationGas(\n      request,\n      account.getEntrypoint()\n    );\n\n    const callGasLimit = applyUserOpOverrideOrFeeOption(\n      estimates.callGasLimit,\n      overrides?.callGasLimit,\n      feeOptions?.callGasLimit\n    );\n    const verificationGasLimit = applyUserOpOverrideOrFeeOption(\n      estimates.verificationGasLimit,\n      overrides?.verificationGasLimit,\n      feeOptions?.verificationGasLimit\n    );\n    const preVerificationGas = applyUserOpOverrideOrFeeOption(\n      estimates.preVerificationGas,\n      overrides?.preVerificationGas,\n      feeOptions?.preVerificationGas\n    );\n\n    struct.callGasLimit = callGasLimit;\n    struct.verificationGasLimit = verificationGasLimit;\n    struct.preVerificationGas = preVerificationGas;\n    return struct;\n  };\n"]}