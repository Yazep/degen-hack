{"version":3,"file":"testUtils.js","sourceRoot":"","sources":["../../../src/utils/testUtils.ts"],"names":[],"mappings":";;;AAAA,+BAA4E;AAC5E,gFAG4C;AAC5C,iEAGoC;AAE7B,MAAM,+BAA+B,GAAG,KAAK,EAClD,MAAS,EACT,UAAmB,EACY,EAAE;IACjC,OAAO,IAAA,gDAAsB,EAAC;QAC5B,MAAM,EAAE,OAAO;QACf,cAAc,EAAE,4CAA4C;QAC5D,iBAAiB,EAAE,UAAU;QAC7B,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,SAAS,EAAE,IAAA,aAAM,EAAC,MAAM,CAAC;QACzB,WAAW,EAAE,KAAK,IAAI,EAAE,CAAC,YAAY;QACrC,aAAa,EAAE,KAAK,IAAI,EAAE,CAAC,YAAY;QACvC,kBAAkB,EAAE,KAAK,IAAI,EAAE,CAC7B,oDAAoD;QACtD,kBAAkB,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;QACpC,aAAa,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI;QAC/B,iBAAiB,EAAE,GAAG,EAAE,CACtB,sIAAsI;KACzI,CAAC,CAAC;AACL,CAAC,CAAC;AAnBW,QAAA,+BAA+B,mCAmB1C;AAEK,MAAM,gBAAgB,GAAG,CAAC,KAAY,EAAE,EAAE;IAC/C,OAAO,IAAA,kDAA+B,EACpC,IAAA,yBAAkB,EAAC;QACjB,KAAK;QACL,SAAS,EAAE,IAAA,aAAM,EAAC;YAChB,OAAO,EAAE,KAAK,IAAI,EAAE,GAAE,CAAC;SACxB,CAAC;KACH,CAAC,CACH,CAAC;AACJ,CAAC,CAAC;AATW,QAAA,gBAAgB,oBAS3B","sourcesContent":["import { createPublicClient, custom, type Address, type Chain } from \"viem\";\nimport {\n  toSmartContractAccount,\n  type SmartContractAccount,\n} from \"../account/smartContractAccount.js\";\nimport {\n  createBundlerClientFromExisting,\n  type BundlerClient,\n} from \"../client/bundlerClient.js\";\n\nexport const createDummySmartContractAccount = async <C extends BundlerClient>(\n  client: C,\n  entrypoint: Address\n): Promise<SmartContractAccount> => {\n  return toSmartContractAccount({\n    source: \"dummy\",\n    accountAddress: \"0x1234567890123456789012345678901234567890\",\n    entrypointAddress: entrypoint,\n    chain: client.chain,\n    transport: custom(client),\n    signMessage: async () => \"0xdeadbeef\",\n    signTypedData: async () => \"0xdeadbeef\",\n    getAccountInitCode: async () =>\n      \"0x1234567890123456789012345678901234567890deadbeef\",\n    encodeBatchExecute: async () => \"0x\",\n    encodeExecute: async () => \"0x\",\n    getDummySignature: () =>\n      \"0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c\",\n  });\n};\n\nexport const createTestClient = (chain: Chain) => {\n  return createBundlerClientFromExisting(\n    createPublicClient({\n      chain,\n      transport: custom({\n        request: async () => {},\n      }),\n    })\n  );\n};\n"]}