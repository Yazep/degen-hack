{"version":3,"file":"smartAccountClient.js","sourceRoot":"","sources":["../../../src/client/smartAccountClient.ts"],"names":[],"mappings":";;;AAAA,+BAUc;AAGd,yDAA6D;AAG7D,yDAA6E;AAK7E,8EAG4C;AAC5C,2CAA2D;AA4E3D,SAAgB,wBAAwB,CACtC,MAAgC;IAEhC,MAAM,EACJ,GAAG,GAAG,SAAS,EACf,IAAI,GAAG,kBAAkB,EACzB,SAAS,EACT,GAAG,MAAM,EACV,GAAG,MAAM,CAAC;IAEX,MAAM,MAAM,GAAG,IAAA,sCAAmB,EAAC;QACjC,GAAG,MAAM;QACT,GAAG;QACH,IAAI;QACJ,IAAI,EAAE,oBAAoB;QAG1B,SAAS;KACV,CAAC,CAAC;IAEH,OAAO,MAAM;SACV,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;QACb,GAAG,wCAA4B,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;KACzD,CAAC,CAAC;SACF,MAAM,CAAC,IAAA,8BAAiB,EAAC,MAAM,CAAC,CAAC;SACjC,MAAM,CAAC,iDAAyB,CAAC,CAAC;AACvC,CAAC;AA1BD,4DA0BC;AAqBD,SAAgB,oCAAoC,CAClD,MAEC;IAED,OAAO,wBAAwB,CAAC;QAC9B,GAAG,MAAM;QACT,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK;QAC1B,SAAS,EAAE,IAAA,aAAM,EAAC,MAAM,CAAC,MAAM,CAAC;KACjC,CAAC,CAAC;AACL,CAAC;AAVD,oFAUC","sourcesContent":["import {\n  custom,\n  type Chain,\n  type Client,\n  type ClientConfig,\n  type CustomTransport,\n  type PublicActions,\n  type PublicRpcSchema,\n  type RpcSchema,\n  type Transport,\n} from \"viem\";\nimport { z } from \"zod\";\nimport type { SmartContractAccount } from \"../account/smartContractAccount.js\";\nimport { middlewareActions } from \"../middleware/actions.js\";\nimport type { ClientMiddleware } from \"../middleware/types.js\";\nimport type { Prettify } from \"../utils/index.js\";\nimport { createBundlerClient, type BundlerClient } from \"./bundlerClient.js\";\nimport {\n  type BundlerActions,\n  type BundlerRpcSchema,\n} from \"./decorators/bundlerClient.js\";\nimport {\n  smartAccountClientActions,\n  type BaseSmartAccountClientActions,\n} from \"./decorators/smartAccountClient.js\";\nimport { SmartAccountClientOptsSchema } from \"./schema.js\";\nimport type { ClientMiddlewareConfig } from \"./types.js\";\n\ntype SmartAccountClientOpts = z.output<typeof SmartAccountClientOptsSchema>;\n\nexport type SmartAccountClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, account>,\n    \"cacheTime\" | \"chain\" | \"key\" | \"name\" | \"pollingInterval\" | \"transport\"\n  > & {\n    account?: account;\n    opts?: z.input<typeof SmartAccountClientOptsSchema>;\n  } & ClientMiddlewareConfig\n>;\n\nexport type SmartAccountClientRpcSchema = [\n  ...BundlerRpcSchema,\n  ...PublicRpcSchema\n];\n\nexport type SmartAccountClientActions<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n> = BaseSmartAccountClientActions<chain, account> &\n  BundlerActions &\n  PublicActions;\n\nexport type SmartAccountClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  actions extends SmartAccountClientActions<\n    chain,\n    account\n  > = SmartAccountClientActions<chain, account>,\n  rpcSchema extends RpcSchema = SmartAccountClientRpcSchema\n> = Prettify<Client<transport, chain, account, rpcSchema, actions>>;\n\nexport type BaseSmartAccountClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    account,\n    [...BundlerRpcSchema, ...PublicRpcSchema],\n    { middleware: ClientMiddleware } & SmartAccountClientOpts &\n      BundlerActions &\n      PublicActions\n  >\n>;\n\nexport function createSmartAccountClient<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n>(\n  config: SmartAccountClientConfig<TTransport, TChain, TAccount>\n): SmartAccountClient<TTransport, TChain, TAccount>;\n\nexport function createSmartAccountClient(\n  config: SmartAccountClientConfig\n): SmartAccountClient {\n  const {\n    key = \"account\",\n    name = \"account provider\",\n    transport,\n    ...params\n  } = config;\n\n  const client = createBundlerClient({\n    ...params,\n    key,\n    name,\n    type: \"SmartAccountClient\",\n    // TODO: our OG provider also has handlers for some various RPC methods\n    // we should support those here as well\n    transport,\n  });\n\n  return client\n    .extend(() => ({\n      ...SmartAccountClientOptsSchema.parse(config.opts ?? {}),\n    }))\n    .extend(middlewareActions(config))\n    .extend(smartAccountClientActions);\n}\n\nexport function createSmartAccountClientFromExisting<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TClient extends BundlerClient<TTransport> = BundlerClient<TTransport>,\n  TActions extends SmartAccountClientActions<\n    TChain,\n    TAccount\n  > = SmartAccountClientActions<TChain, TAccount>,\n  TRpcSchema extends SmartAccountClientRpcSchema = SmartAccountClientRpcSchema\n>(\n  config: Omit<\n    SmartAccountClientConfig<Transport, TChain, TAccount>,\n    \"transport\" | \"chain\"\n  > & { client: TClient }\n): SmartAccountClient<CustomTransport, TChain, TAccount, TActions, TRpcSchema>;\n\nexport function createSmartAccountClientFromExisting(\n  config: Omit<SmartAccountClientConfig, \"transport\" | \"chain\"> & {\n    client: BundlerClient;\n  }\n): SmartAccountClient {\n  return createSmartAccountClient({\n    ...config,\n    chain: config.client.chain,\n    transport: custom(config.client),\n  });\n}\n"]}