import { AccountNotFoundError } from "../../../errors/account.js";
import { overridePaymasterDataMiddleware } from "../../../middleware/defaults/overridePaymasterData.js";
import { resolveProperties } from "../../../utils/index.js";
const asyncPipe = (...fns) => async (s, opts) => {
    let result = s;
    for (const fn of fns) {
        result = await fn(result, opts);
    }
    return result;
};
export const _runMiddlewareStack = async (client, args) => {
    const { uo, overrides, account = client.account } = args;
    if (!account) {
        throw new AccountNotFoundError();
    }
    const result = await asyncPipe(client.middleware.dummyPaymasterAndData, client.middleware.feeEstimator, client.middleware.gasEstimator, client.middleware.customMiddleware, overrides?.paymasterAndData
        ? overridePaymasterDataMiddleware
        : client.middleware.paymasterAndData, client.middleware.userOperationSimulator)(uo, { overrides, feeOptions: client.feeOptions, account });
    return resolveProperties(result);
};
//# sourceMappingURL=runMiddlewareStack.js.map