import { isBaseSmartAccountClient } from "../../client/isSmartAccountClient.js";
import { AccountNotFoundError } from "../../errors/account.js";
import { IncompatibleClientError } from "../../errors/client.js";
import { _runMiddlewareStack } from "./internal/runMiddlewareStack.js";
export const buildUserOperation = async (client, args) => {
    const { account = client.account, overrides, uo } = args;
    if (!account) {
        throw new AccountNotFoundError();
    }
    if (!isBaseSmartAccountClient(client)) {
        throw new IncompatibleClientError("BaseSmartAccountClient", "buildUserOperation");
    }
    return _runMiddlewareStack(client, {
        uo: {
            initCode: account.getInitCode(),
            sender: account.address,
            nonce: account.getNonce(),
            callData: Array.isArray(uo)
                ? account.encodeBatchExecute(uo)
                : typeof uo === "string"
                    ? uo
                    : account.encodeExecute(uo),
            signature: account.getDummySignature(),
        },
        overrides,
        account,
    });
};
//# sourceMappingURL=buildUserOperation.js.map