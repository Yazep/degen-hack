import { isBaseSmartAccountClient } from "../../client/isSmartAccountClient.js";
import { AccountNotFoundError } from "../../errors/account.js";
import { IncompatibleClientError } from "../../errors/client.js";
import { buildUserOperation } from "./buildUserOperation.js";
import { _sendUserOperation } from "./internal/sendUserOperation.js";
export const sendUserOperation = async (client, args) => {
    const { account = client.account } = args;
    if (!account) {
        throw new AccountNotFoundError();
    }
    if (!isBaseSmartAccountClient(client)) {
        throw new IncompatibleClientError("BaseSmartAccountClient", "sendUserOperation");
    }
    const uoStruct = await buildUserOperation(client, args);
    return _sendUserOperation(client, { account, uoStruct });
};
//# sourceMappingURL=sendUserOperation.js.map