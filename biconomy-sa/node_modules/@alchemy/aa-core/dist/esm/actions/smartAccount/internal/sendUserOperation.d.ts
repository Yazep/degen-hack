import type { Chain, Transport } from "viem";
import type { GetAccountParameter, SmartContractAccount } from "../../../account/smartContractAccount";
import type { BaseSmartAccountClient } from "../../../client/smartAccountClient";
import type { SendUserOperationResult } from "../../../client/types";
import type { UserOperationStruct } from "../../../types";
export declare const _sendUserOperation: <TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TAccount extends SmartContractAccount | undefined = SmartContractAccount | undefined>(client: BaseSmartAccountClient<TTransport, TChain, TAccount>, args: {
    uoStruct: UserOperationStruct;
} & GetAccountParameter<TAccount>) => Promise<SendUserOperationResult>;
