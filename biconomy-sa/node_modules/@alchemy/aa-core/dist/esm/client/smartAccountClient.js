import { custom, } from "viem";
import { z } from "zod";
import { middlewareActions } from "../middleware/actions.js";
import { createBundlerClient } from "./bundlerClient.js";
import {} from "./decorators/bundlerClient.js";
import { smartAccountClientActions, } from "./decorators/smartAccountClient.js";
import { SmartAccountClientOptsSchema } from "./schema.js";
export function createSmartAccountClient(config) {
    const { key = "account", name = "account provider", transport, ...params } = config;
    const client = createBundlerClient({
        ...params,
        key,
        name,
        type: "SmartAccountClient",
        transport,
    });
    return client
        .extend(() => ({
        ...SmartAccountClientOptsSchema.parse(config.opts ?? {}),
    }))
        .extend(middlewareActions(config))
        .extend(smartAccountClientActions);
}
export function createSmartAccountClientFromExisting(config) {
    return createSmartAccountClient({
        ...config,
        chain: config.client.chain,
        transport: custom(config.client),
    });
}
//# sourceMappingURL=smartAccountClient.js.map