{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/client/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { Address } from \"abitype\";\nimport type { Hash, Hex } from \"viem\";\nimport type { z } from \"zod\";\nimport type {\n  ClientMiddleware,\n  ClientMiddlewareFn,\n} from \"../middleware/types.js\";\nimport type { UserOperationRequest } from \"../types.js\";\nimport type { ConnectionConfigSchema } from \"./schema.js\";\n\nexport type ConnectorData = {\n  chainId?: Hex;\n};\n\nexport type ConnectionConfig = z.input<typeof ConnectionConfigSchema>;\n\nexport type SendUserOperationResult = {\n  hash: Hash;\n  request: UserOperationRequest;\n};\n\nexport type UpgradeToData = {\n  implAddress: Address;\n  initializationData: Hex;\n};\n\nexport type ClientMiddlewareConfig = Omit<\n  Partial<ClientMiddleware>,\n  \"dummyPaymasterAndData\" | \"paymasterAndData\"\n> & {\n  paymasterAndData?: {\n    dummyPaymasterAndData: () => Hex;\n    paymasterAndData: ClientMiddlewareFn;\n  };\n};\n"]}