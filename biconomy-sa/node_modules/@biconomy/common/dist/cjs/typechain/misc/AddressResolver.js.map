{"version":3,"file":"AddressResolver.js","sourceRoot":"","sources":["../../../../src/typechain/misc/AddressResolver.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type { FunctionFragment, Result } from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../common\";\n\nexport declare namespace IAddressResolver {\n  export type SmartAccountResultStruct = {\n    accountAddress: PromiseOrValue<string>;\n    factoryAddress: PromiseOrValue<string>;\n    currentImplementation: PromiseOrValue<string>;\n    currentVersion: PromiseOrValue<string>;\n    factoryVersion: PromiseOrValue<string>;\n    deploymentIndex: PromiseOrValue<BigNumberish>;\n  };\n\n  export type SmartAccountResultStructOutput = [\n    string,\n    string,\n    string,\n    string,\n    string,\n    BigNumber\n  ] & {\n    accountAddress: string;\n    factoryAddress: string;\n    currentImplementation: string;\n    currentVersion: string;\n    factoryVersion: string;\n    deploymentIndex: BigNumber;\n  };\n}\n\nexport interface AddressResolverInterface extends utils.Interface {\n  functions: {\n    \"ecdsaOwnershipModule()\": FunctionFragment;\n    \"resolveAddresses(address,uint8)\": FunctionFragment;\n    \"resolveAddressesFlexibleForV2(address,uint8,address,bytes)\": FunctionFragment;\n    \"resolveAddressesV1(address,uint8)\": FunctionFragment;\n    \"smartAccountFactoryV1()\": FunctionFragment;\n    \"smartAccountFactoryV2()\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"ecdsaOwnershipModule\"\n      | \"resolveAddresses\"\n      | \"resolveAddressesFlexibleForV2\"\n      | \"resolveAddressesV1\"\n      | \"smartAccountFactoryV1\"\n      | \"smartAccountFactoryV2\"\n  ): FunctionFragment;\n\n  encodeFunctionData(\n    functionFragment: \"ecdsaOwnershipModule\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"resolveAddresses\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"resolveAddressesFlexibleForV2\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"resolveAddressesV1\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"smartAccountFactoryV1\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"smartAccountFactoryV2\",\n    values?: undefined\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"ecdsaOwnershipModule\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"resolveAddresses\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"resolveAddressesFlexibleForV2\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"resolveAddressesV1\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"smartAccountFactoryV1\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"smartAccountFactoryV2\",\n    data: BytesLike\n  ): Result;\n\n  events: {};\n}\n\nexport interface AddressResolver extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: AddressResolverInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    ecdsaOwnershipModule(overrides?: CallOverrides): Promise<[string]>;\n\n    resolveAddresses(\n      _eoa: PromiseOrValue<string>,\n      _maxIndex: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<[IAddressResolver.SmartAccountResultStructOutput[]]>;\n\n    resolveAddressesFlexibleForV2(\n      _eoa: PromiseOrValue<string>,\n      _maxIndex: PromiseOrValue<BigNumberish>,\n      _moduleAddress: PromiseOrValue<string>,\n      _moduleSetupData: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[IAddressResolver.SmartAccountResultStructOutput[]]>;\n\n    resolveAddressesV1(\n      _eoa: PromiseOrValue<string>,\n      _maxIndex: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<[IAddressResolver.SmartAccountResultStructOutput[]]>;\n\n    smartAccountFactoryV1(overrides?: CallOverrides): Promise<[string]>;\n\n    smartAccountFactoryV2(overrides?: CallOverrides): Promise<[string]>;\n  };\n\n  ecdsaOwnershipModule(overrides?: CallOverrides): Promise<string>;\n\n  resolveAddresses(\n    _eoa: PromiseOrValue<string>,\n    _maxIndex: PromiseOrValue<BigNumberish>,\n    overrides?: CallOverrides\n  ): Promise<IAddressResolver.SmartAccountResultStructOutput[]>;\n\n  resolveAddressesFlexibleForV2(\n    _eoa: PromiseOrValue<string>,\n    _maxIndex: PromiseOrValue<BigNumberish>,\n    _moduleAddress: PromiseOrValue<string>,\n    _moduleSetupData: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<IAddressResolver.SmartAccountResultStructOutput[]>;\n\n  resolveAddressesV1(\n    _eoa: PromiseOrValue<string>,\n    _maxIndex: PromiseOrValue<BigNumberish>,\n    overrides?: CallOverrides\n  ): Promise<IAddressResolver.SmartAccountResultStructOutput[]>;\n\n  smartAccountFactoryV1(overrides?: CallOverrides): Promise<string>;\n\n  smartAccountFactoryV2(overrides?: CallOverrides): Promise<string>;\n\n  callStatic: {\n    ecdsaOwnershipModule(overrides?: CallOverrides): Promise<string>;\n\n    resolveAddresses(\n      _eoa: PromiseOrValue<string>,\n      _maxIndex: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<IAddressResolver.SmartAccountResultStructOutput[]>;\n\n    resolveAddressesFlexibleForV2(\n      _eoa: PromiseOrValue<string>,\n      _maxIndex: PromiseOrValue<BigNumberish>,\n      _moduleAddress: PromiseOrValue<string>,\n      _moduleSetupData: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<IAddressResolver.SmartAccountResultStructOutput[]>;\n\n    resolveAddressesV1(\n      _eoa: PromiseOrValue<string>,\n      _maxIndex: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<IAddressResolver.SmartAccountResultStructOutput[]>;\n\n    smartAccountFactoryV1(overrides?: CallOverrides): Promise<string>;\n\n    smartAccountFactoryV2(overrides?: CallOverrides): Promise<string>;\n  };\n\n  filters: {};\n\n  estimateGas: {\n    ecdsaOwnershipModule(overrides?: CallOverrides): Promise<BigNumber>;\n\n    resolveAddresses(\n      _eoa: PromiseOrValue<string>,\n      _maxIndex: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    resolveAddressesFlexibleForV2(\n      _eoa: PromiseOrValue<string>,\n      _maxIndex: PromiseOrValue<BigNumberish>,\n      _moduleAddress: PromiseOrValue<string>,\n      _moduleSetupData: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    resolveAddressesV1(\n      _eoa: PromiseOrValue<string>,\n      _maxIndex: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    smartAccountFactoryV1(overrides?: CallOverrides): Promise<BigNumber>;\n\n    smartAccountFactoryV2(overrides?: CallOverrides): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    ecdsaOwnershipModule(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    resolveAddresses(\n      _eoa: PromiseOrValue<string>,\n      _maxIndex: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    resolveAddressesFlexibleForV2(\n      _eoa: PromiseOrValue<string>,\n      _maxIndex: PromiseOrValue<BigNumberish>,\n      _moduleAddress: PromiseOrValue<string>,\n      _moduleSetupData: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    resolveAddressesV1(\n      _eoa: PromiseOrValue<string>,\n      _maxIndex: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    smartAccountFactoryV1(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    smartAccountFactoryV2(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}