{"version":3,"file":"SmartAccount_v100.js","sourceRoot":"","sources":["../../../../src/typechain/biconomy_v1.0.0/SmartAccount_v100.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PayableOverrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport type {\n  FunctionFragment,\n  Result,\n  EventFragment,\n} from \"@ethersproject/abi\";\nimport type { Listener, Provider } from \"@ethersproject/providers\";\nimport type {\n  TypedEventFilter,\n  TypedEvent,\n  TypedListener,\n  OnEvent,\n  PromiseOrValue,\n} from \"../common\";\n\nexport type TransactionStruct = {\n  to: PromiseOrValue<string>;\n  operation: PromiseOrValue<BigNumberish>;\n  value: PromiseOrValue<BigNumberish>;\n  data: PromiseOrValue<BytesLike>;\n  targetTxGas: PromiseOrValue<BigNumberish>;\n};\n\nexport type TransactionStructOutput = [\n  string,\n  number,\n  BigNumber,\n  string,\n  BigNumber\n] & {\n  to: string;\n  operation: number;\n  value: BigNumber;\n  data: string;\n  targetTxGas: BigNumber;\n};\n\nexport type FeeRefundStruct = {\n  baseGas: PromiseOrValue<BigNumberish>;\n  gasPrice: PromiseOrValue<BigNumberish>;\n  tokenGasPriceFactor: PromiseOrValue<BigNumberish>;\n  gasToken: PromiseOrValue<string>;\n  refundReceiver: PromiseOrValue<string>;\n};\n\nexport type FeeRefundStructOutput = [\n  BigNumber,\n  BigNumber,\n  BigNumber,\n  string,\n  string\n] & {\n  baseGas: BigNumber;\n  gasPrice: BigNumber;\n  tokenGasPriceFactor: BigNumber;\n  gasToken: string;\n  refundReceiver: string;\n};\n\nexport type UserOperationStruct = {\n  sender: PromiseOrValue<string>;\n  nonce: PromiseOrValue<BigNumberish>;\n  initCode: PromiseOrValue<BytesLike>;\n  callData: PromiseOrValue<BytesLike>;\n  callGasLimit: PromiseOrValue<BigNumberish>;\n  verificationGasLimit: PromiseOrValue<BigNumberish>;\n  preVerificationGas: PromiseOrValue<BigNumberish>;\n  maxFeePerGas: PromiseOrValue<BigNumberish>;\n  maxPriorityFeePerGas: PromiseOrValue<BigNumberish>;\n  paymasterAndData: PromiseOrValue<BytesLike>;\n  signature: PromiseOrValue<BytesLike>;\n};\n\nexport type UserOperationStructOutput = [\n  string,\n  BigNumber,\n  string,\n  string,\n  BigNumber,\n  BigNumber,\n  BigNumber,\n  BigNumber,\n  BigNumber,\n  string,\n  string\n] & {\n  sender: string;\n  nonce: BigNumber;\n  initCode: string;\n  callData: string;\n  callGasLimit: BigNumber;\n  verificationGasLimit: BigNumber;\n  preVerificationGas: BigNumber;\n  maxFeePerGas: BigNumber;\n  maxPriorityFeePerGas: BigNumber;\n  paymasterAndData: string;\n  signature: string;\n};\n\nexport interface SmartAccount_v100Interface extends utils.Interface {\n  functions: {\n    \"VERSION()\": FunctionFragment;\n    \"addDeposit()\": FunctionFragment;\n    \"checkSignatures(bytes32,bytes)\": FunctionFragment;\n    \"disableModule(address,address)\": FunctionFragment;\n    \"domainSeparator()\": FunctionFragment;\n    \"enableModule(address)\": FunctionFragment;\n    \"encodeTransactionData((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),uint256)\": FunctionFragment;\n    \"entryPoint()\": FunctionFragment;\n    \"execTransaction((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)\": FunctionFragment;\n    \"execTransactionFromModule(address,uint256,bytes,uint8)\": FunctionFragment;\n    \"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)\": FunctionFragment;\n    \"execTransaction_S6W((address,uint8,uint256,bytes,uint256),(uint256,uint256,uint256,address,address),bytes)\": FunctionFragment;\n    \"executeBatchCall(address[],uint256[],bytes[])\": FunctionFragment;\n    \"executeBatchCall_4by(address[],uint256[],bytes[])\": FunctionFragment;\n    \"executeCall(address,uint256,bytes)\": FunctionFragment;\n    \"executeCall_s1m(address,uint256,bytes)\": FunctionFragment;\n    \"getChainId()\": FunctionFragment;\n    \"getDeposit()\": FunctionFragment;\n    \"getFallbackHandler()\": FunctionFragment;\n    \"getImplementation()\": FunctionFragment;\n    \"getModulesPaginated(address,uint256)\": FunctionFragment;\n    \"getNonce(uint256)\": FunctionFragment;\n    \"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,uint256,address,address,uint256)\": FunctionFragment;\n    \"handlePaymentRevert(uint256,uint256,uint256,uint256,address,address)\": FunctionFragment;\n    \"init(address,address)\": FunctionFragment;\n    \"isModuleEnabled(address)\": FunctionFragment;\n    \"isValidSignature(bytes32,bytes)\": FunctionFragment;\n    \"nonce()\": FunctionFragment;\n    \"nonces(uint256)\": FunctionFragment;\n    \"owner()\": FunctionFragment;\n    \"pullTokens(address,address,uint256)\": FunctionFragment;\n    \"requiredTxGas(address,uint256,bytes,uint8)\": FunctionFragment;\n    \"setFallbackHandler(address)\": FunctionFragment;\n    \"setOwner(address)\": FunctionFragment;\n    \"supportsInterface(bytes4)\": FunctionFragment;\n    \"transfer(address,uint256)\": FunctionFragment;\n    \"updateImplementation(address)\": FunctionFragment;\n    \"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\": FunctionFragment;\n    \"withdrawDepositTo(address,uint256)\": FunctionFragment;\n  };\n\n  getFunction(\n    nameOrSignatureOrTopic:\n      | \"VERSION\"\n      | \"addDeposit\"\n      | \"checkSignatures\"\n      | \"disableModule\"\n      | \"domainSeparator\"\n      | \"enableModule\"\n      | \"encodeTransactionData\"\n      | \"entryPoint\"\n      | \"execTransaction\"\n      | \"execTransactionFromModule\"\n      | \"execTransactionFromModuleReturnData\"\n      | \"execTransaction_S6W\"\n      | \"executeBatchCall\"\n      | \"executeBatchCall_4by\"\n      | \"executeCall\"\n      | \"executeCall_s1m\"\n      | \"getChainId\"\n      | \"getDeposit\"\n      | \"getFallbackHandler\"\n      | \"getImplementation\"\n      | \"getModulesPaginated\"\n      | \"getNonce\"\n      | \"getTransactionHash\"\n      | \"handlePaymentRevert\"\n      | \"init\"\n      | \"isModuleEnabled\"\n      | \"isValidSignature\"\n      | \"nonce\"\n      | \"nonces\"\n      | \"owner\"\n      | \"pullTokens\"\n      | \"requiredTxGas\"\n      | \"setFallbackHandler\"\n      | \"setOwner\"\n      | \"supportsInterface\"\n      | \"transfer\"\n      | \"updateImplementation\"\n      | \"validateUserOp\"\n      | \"withdrawDepositTo\"\n  ): FunctionFragment;\n\n  encodeFunctionData(functionFragment: \"VERSION\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"addDeposit\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"checkSignatures\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"disableModule\",\n    values: [PromiseOrValue<string>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"domainSeparator\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"enableModule\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"encodeTransactionData\",\n    values: [TransactionStruct, FeeRefundStruct, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"entryPoint\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"execTransaction\",\n    values: [TransactionStruct, FeeRefundStruct, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"execTransactionFromModule\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"execTransactionFromModuleReturnData\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"execTransaction_S6W\",\n    values: [TransactionStruct, FeeRefundStruct, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"executeBatchCall\",\n    values: [\n      PromiseOrValue<string>[],\n      PromiseOrValue<BigNumberish>[],\n      PromiseOrValue<BytesLike>[]\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"executeBatchCall_4by\",\n    values: [\n      PromiseOrValue<string>[],\n      PromiseOrValue<BigNumberish>[],\n      PromiseOrValue<BytesLike>[]\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"executeCall\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"executeCall_s1m\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BytesLike>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getChainId\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getDeposit\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getFallbackHandler\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getImplementation\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getModulesPaginated\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getNonce\",\n    values: [PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getTransactionHash\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"handlePaymentRevert\",\n    values: [\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<string>,\n      PromiseOrValue<string>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"init\",\n    values: [PromiseOrValue<string>, PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isModuleEnabled\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isValidSignature\",\n    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(functionFragment: \"nonce\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"nonces\",\n    values: [PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(functionFragment: \"owner\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"pullTokens\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"requiredTxGas\",\n    values: [\n      PromiseOrValue<string>,\n      PromiseOrValue<BigNumberish>,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setFallbackHandler\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setOwner\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface\",\n    values: [PromiseOrValue<BytesLike>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transfer\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"updateImplementation\",\n    values: [PromiseOrValue<string>]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"validateUserOp\",\n    values: [\n      UserOperationStruct,\n      PromiseOrValue<BytesLike>,\n      PromiseOrValue<BigNumberish>\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"withdrawDepositTo\",\n    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]\n  ): string;\n\n  decodeFunctionResult(functionFragment: \"VERSION\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"addDeposit\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"checkSignatures\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"disableModule\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"domainSeparator\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"enableModule\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"encodeTransactionData\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"entryPoint\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"execTransaction\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"execTransactionFromModule\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"execTransactionFromModuleReturnData\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"execTransaction_S6W\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"executeBatchCall\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"executeBatchCall_4by\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"executeCall\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"executeCall_s1m\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"getChainId\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"getDeposit\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"getFallbackHandler\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getImplementation\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getModulesPaginated\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"getNonce\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"getTransactionHash\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"handlePaymentRevert\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"init\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"isModuleEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isValidSignature\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"nonce\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"nonces\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"owner\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"pullTokens\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"requiredTxGas\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setFallbackHandler\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"setOwner\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"transfer\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"updateImplementation\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"validateUserOp\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"withdrawDepositTo\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"AccountHandlePayment(bytes32,uint256)\": EventFragment;\n    \"ChangedFallbackHandler(address,address)\": EventFragment;\n    \"DisabledModule(address)\": EventFragment;\n    \"EOAChanged(address,address,address)\": EventFragment;\n    \"EnabledModule(address)\": EventFragment;\n    \"ExecutionFailure(address,uint256,bytes,uint8,uint256)\": EventFragment;\n    \"ExecutionFromModuleFailure(address)\": EventFragment;\n    \"ExecutionFromModuleSuccess(address)\": EventFragment;\n    \"ExecutionSuccess(address,uint256,bytes,uint8,uint256)\": EventFragment;\n    \"ImplementationUpdated(address,address)\": EventFragment;\n    \"ModuleTransaction(address,address,uint256,bytes,uint8)\": EventFragment;\n    \"SmartAccountReceivedNativeToken(address,uint256)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"AccountHandlePayment\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ChangedFallbackHandler\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"DisabledModule\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"EOAChanged\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"EnabledModule\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ExecutionFailure\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ExecutionFromModuleFailure\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ExecutionFromModuleSuccess\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ExecutionSuccess\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ImplementationUpdated\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ModuleTransaction\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"SmartAccountReceivedNativeToken\"\n  ): EventFragment;\n}\n\nexport interface AccountHandlePaymentEventObject {\n  txHash: string;\n  payment: BigNumber;\n}\nexport type AccountHandlePaymentEvent = TypedEvent<\n  [string, BigNumber],\n  AccountHandlePaymentEventObject\n>;\n\nexport type AccountHandlePaymentEventFilter =\n  TypedEventFilter<AccountHandlePaymentEvent>;\n\nexport interface ChangedFallbackHandlerEventObject {\n  previousHandler: string;\n  handler: string;\n}\nexport type ChangedFallbackHandlerEvent = TypedEvent<\n  [string, string],\n  ChangedFallbackHandlerEventObject\n>;\n\nexport type ChangedFallbackHandlerEventFilter =\n  TypedEventFilter<ChangedFallbackHandlerEvent>;\n\nexport interface DisabledModuleEventObject {\n  module: string;\n}\nexport type DisabledModuleEvent = TypedEvent<\n  [string],\n  DisabledModuleEventObject\n>;\n\nexport type DisabledModuleEventFilter = TypedEventFilter<DisabledModuleEvent>;\n\nexport interface EOAChangedEventObject {\n  _scw: string;\n  _oldEOA: string;\n  _newEOA: string;\n}\nexport type EOAChangedEvent = TypedEvent<\n  [string, string, string],\n  EOAChangedEventObject\n>;\n\nexport type EOAChangedEventFilter = TypedEventFilter<EOAChangedEvent>;\n\nexport interface EnabledModuleEventObject {\n  module: string;\n}\nexport type EnabledModuleEvent = TypedEvent<[string], EnabledModuleEventObject>;\n\nexport type EnabledModuleEventFilter = TypedEventFilter<EnabledModuleEvent>;\n\nexport interface ExecutionFailureEventObject {\n  to: string;\n  value: BigNumber;\n  data: string;\n  operation: number;\n  txGas: BigNumber;\n}\nexport type ExecutionFailureEvent = TypedEvent<\n  [string, BigNumber, string, number, BigNumber],\n  ExecutionFailureEventObject\n>;\n\nexport type ExecutionFailureEventFilter =\n  TypedEventFilter<ExecutionFailureEvent>;\n\nexport interface ExecutionFromModuleFailureEventObject {\n  module: string;\n}\nexport type ExecutionFromModuleFailureEvent = TypedEvent<\n  [string],\n  ExecutionFromModuleFailureEventObject\n>;\n\nexport type ExecutionFromModuleFailureEventFilter =\n  TypedEventFilter<ExecutionFromModuleFailureEvent>;\n\nexport interface ExecutionFromModuleSuccessEventObject {\n  module: string;\n}\nexport type ExecutionFromModuleSuccessEvent = TypedEvent<\n  [string],\n  ExecutionFromModuleSuccessEventObject\n>;\n\nexport type ExecutionFromModuleSuccessEventFilter =\n  TypedEventFilter<ExecutionFromModuleSuccessEvent>;\n\nexport interface ExecutionSuccessEventObject {\n  to: string;\n  value: BigNumber;\n  data: string;\n  operation: number;\n  txGas: BigNumber;\n}\nexport type ExecutionSuccessEvent = TypedEvent<\n  [string, BigNumber, string, number, BigNumber],\n  ExecutionSuccessEventObject\n>;\n\nexport type ExecutionSuccessEventFilter =\n  TypedEventFilter<ExecutionSuccessEvent>;\n\nexport interface ImplementationUpdatedEventObject {\n  oldImplementation: string;\n  newImplementation: string;\n}\nexport type ImplementationUpdatedEvent = TypedEvent<\n  [string, string],\n  ImplementationUpdatedEventObject\n>;\n\nexport type ImplementationUpdatedEventFilter =\n  TypedEventFilter<ImplementationUpdatedEvent>;\n\nexport interface ModuleTransactionEventObject {\n  module: string;\n  to: string;\n  value: BigNumber;\n  data: string;\n  operation: number;\n}\nexport type ModuleTransactionEvent = TypedEvent<\n  [string, string, BigNumber, string, number],\n  ModuleTransactionEventObject\n>;\n\nexport type ModuleTransactionEventFilter =\n  TypedEventFilter<ModuleTransactionEvent>;\n\nexport interface SmartAccountReceivedNativeTokenEventObject {\n  sender: string;\n  value: BigNumber;\n}\nexport type SmartAccountReceivedNativeTokenEvent = TypedEvent<\n  [string, BigNumber],\n  SmartAccountReceivedNativeTokenEventObject\n>;\n\nexport type SmartAccountReceivedNativeTokenEventFilter =\n  TypedEventFilter<SmartAccountReceivedNativeTokenEvent>;\n\nexport interface SmartAccount_v100 extends BaseContract {\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: SmartAccount_v100Interface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    VERSION(overrides?: CallOverrides): Promise<[string]>;\n\n    addDeposit(\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    checkSignatures(\n      dataHash: PromiseOrValue<BytesLike>,\n      signatures: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[void]>;\n\n    disableModule(\n      prevModule: PromiseOrValue<string>,\n      module: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<[string]>;\n\n    enableModule(\n      module: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    encodeTransactionData(\n      _tx: TransactionStruct,\n      refundInfo: FeeRefundStruct,\n      _nonce: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<[string]>;\n\n    entryPoint(overrides?: CallOverrides): Promise<[string]>;\n\n    execTransaction(\n      _tx: TransactionStruct,\n      refundInfo: FeeRefundStruct,\n      signatures: PromiseOrValue<BytesLike>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    execTransactionFromModule(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    execTransactionFromModuleReturnData(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    execTransaction_S6W(\n      _tx: TransactionStruct,\n      refundInfo: FeeRefundStruct,\n      signatures: PromiseOrValue<BytesLike>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    executeBatchCall(\n      dest: PromiseOrValue<string>[],\n      value: PromiseOrValue<BigNumberish>[],\n      func: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    executeBatchCall_4by(\n      dest: PromiseOrValue<string>[],\n      value: PromiseOrValue<BigNumberish>[],\n      func: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    executeCall(\n      dest: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      func: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    executeCall_s1m(\n      dest: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      func: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    getChainId(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    getDeposit(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    getFallbackHandler(\n      overrides?: CallOverrides\n    ): Promise<[string] & { _handler: string }>;\n\n    getImplementation(\n      overrides?: CallOverrides\n    ): Promise<[string] & { _implementation: string }>;\n\n    getModulesPaginated(\n      start: PromiseOrValue<string>,\n      pageSize: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<[string[], string] & { array: string[]; next: string }>;\n\n    getNonce(\n      batchId: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    getTransactionHash(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      targetTxGas: PromiseOrValue<BigNumberish>,\n      baseGas: PromiseOrValue<BigNumberish>,\n      gasPrice: PromiseOrValue<BigNumberish>,\n      tokenGasPriceFactor: PromiseOrValue<BigNumberish>,\n      gasToken: PromiseOrValue<string>,\n      refundReceiver: PromiseOrValue<string>,\n      _nonce: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<[string]>;\n\n    handlePaymentRevert(\n      gasUsed: PromiseOrValue<BigNumberish>,\n      baseGas: PromiseOrValue<BigNumberish>,\n      gasPrice: PromiseOrValue<BigNumberish>,\n      tokenGasPriceFactor: PromiseOrValue<BigNumberish>,\n      gasToken: PromiseOrValue<string>,\n      refundReceiver: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    init(\n      _owner: PromiseOrValue<string>,\n      _handler: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    isModuleEnabled(\n      module: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isValidSignature(\n      _dataHash: PromiseOrValue<BytesLike>,\n      _signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[string]>;\n\n    nonce(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    nonces(\n      arg0: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    owner(overrides?: CallOverrides): Promise<[string]>;\n\n    pullTokens(\n      token: PromiseOrValue<string>,\n      dest: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    requiredTxGas(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setFallbackHandler(\n      handler: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    setOwner(\n      _newOwner: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    supportsInterface(\n      _interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    transfer(\n      dest: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    updateImplementation(\n      _implementation: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    validateUserOp(\n      userOp: UserOperationStruct,\n      userOpHash: PromiseOrValue<BytesLike>,\n      missingAccountFunds: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n\n    withdrawDepositTo(\n      withdrawAddress: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  VERSION(overrides?: CallOverrides): Promise<string>;\n\n  addDeposit(\n    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  checkSignatures(\n    dataHash: PromiseOrValue<BytesLike>,\n    signatures: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<void>;\n\n  disableModule(\n    prevModule: PromiseOrValue<string>,\n    module: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  domainSeparator(overrides?: CallOverrides): Promise<string>;\n\n  enableModule(\n    module: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  encodeTransactionData(\n    _tx: TransactionStruct,\n    refundInfo: FeeRefundStruct,\n    _nonce: PromiseOrValue<BigNumberish>,\n    overrides?: CallOverrides\n  ): Promise<string>;\n\n  entryPoint(overrides?: CallOverrides): Promise<string>;\n\n  execTransaction(\n    _tx: TransactionStruct,\n    refundInfo: FeeRefundStruct,\n    signatures: PromiseOrValue<BytesLike>,\n    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  execTransactionFromModule(\n    to: PromiseOrValue<string>,\n    value: PromiseOrValue<BigNumberish>,\n    data: PromiseOrValue<BytesLike>,\n    operation: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  execTransactionFromModuleReturnData(\n    to: PromiseOrValue<string>,\n    value: PromiseOrValue<BigNumberish>,\n    data: PromiseOrValue<BytesLike>,\n    operation: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  execTransaction_S6W(\n    _tx: TransactionStruct,\n    refundInfo: FeeRefundStruct,\n    signatures: PromiseOrValue<BytesLike>,\n    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  executeBatchCall(\n    dest: PromiseOrValue<string>[],\n    value: PromiseOrValue<BigNumberish>[],\n    func: PromiseOrValue<BytesLike>[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  executeBatchCall_4by(\n    dest: PromiseOrValue<string>[],\n    value: PromiseOrValue<BigNumberish>[],\n    func: PromiseOrValue<BytesLike>[],\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  executeCall(\n    dest: PromiseOrValue<string>,\n    value: PromiseOrValue<BigNumberish>,\n    func: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  executeCall_s1m(\n    dest: PromiseOrValue<string>,\n    value: PromiseOrValue<BigNumberish>,\n    func: PromiseOrValue<BytesLike>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  getChainId(overrides?: CallOverrides): Promise<BigNumber>;\n\n  getDeposit(overrides?: CallOverrides): Promise<BigNumber>;\n\n  getFallbackHandler(overrides?: CallOverrides): Promise<string>;\n\n  getImplementation(overrides?: CallOverrides): Promise<string>;\n\n  getModulesPaginated(\n    start: PromiseOrValue<string>,\n    pageSize: PromiseOrValue<BigNumberish>,\n    overrides?: CallOverrides\n  ): Promise<[string[], string] & { array: string[]; next: string }>;\n\n  getNonce(\n    batchId: PromiseOrValue<BigNumberish>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  getTransactionHash(\n    to: PromiseOrValue<string>,\n    value: PromiseOrValue<BigNumberish>,\n    data: PromiseOrValue<BytesLike>,\n    operation: PromiseOrValue<BigNumberish>,\n    targetTxGas: PromiseOrValue<BigNumberish>,\n    baseGas: PromiseOrValue<BigNumberish>,\n    gasPrice: PromiseOrValue<BigNumberish>,\n    tokenGasPriceFactor: PromiseOrValue<BigNumberish>,\n    gasToken: PromiseOrValue<string>,\n    refundReceiver: PromiseOrValue<string>,\n    _nonce: PromiseOrValue<BigNumberish>,\n    overrides?: CallOverrides\n  ): Promise<string>;\n\n  handlePaymentRevert(\n    gasUsed: PromiseOrValue<BigNumberish>,\n    baseGas: PromiseOrValue<BigNumberish>,\n    gasPrice: PromiseOrValue<BigNumberish>,\n    tokenGasPriceFactor: PromiseOrValue<BigNumberish>,\n    gasToken: PromiseOrValue<string>,\n    refundReceiver: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  init(\n    _owner: PromiseOrValue<string>,\n    _handler: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  isModuleEnabled(\n    module: PromiseOrValue<string>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isValidSignature(\n    _dataHash: PromiseOrValue<BytesLike>,\n    _signature: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<string>;\n\n  nonce(overrides?: CallOverrides): Promise<BigNumber>;\n\n  nonces(\n    arg0: PromiseOrValue<BigNumberish>,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  owner(overrides?: CallOverrides): Promise<string>;\n\n  pullTokens(\n    token: PromiseOrValue<string>,\n    dest: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  requiredTxGas(\n    to: PromiseOrValue<string>,\n    value: PromiseOrValue<BigNumberish>,\n    data: PromiseOrValue<BytesLike>,\n    operation: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setFallbackHandler(\n    handler: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  setOwner(\n    _newOwner: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  supportsInterface(\n    _interfaceId: PromiseOrValue<BytesLike>,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  transfer(\n    dest: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  updateImplementation(\n    _implementation: PromiseOrValue<string>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  validateUserOp(\n    userOp: UserOperationStruct,\n    userOpHash: PromiseOrValue<BytesLike>,\n    missingAccountFunds: PromiseOrValue<BigNumberish>,\n    overrides?: Overrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  withdrawDepositTo(\n    withdrawAddress: PromiseOrValue<string>,\n    amount: PromiseOrValue<BigNumberish>,\n    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    VERSION(overrides?: CallOverrides): Promise<string>;\n\n    addDeposit(overrides?: CallOverrides): Promise<void>;\n\n    checkSignatures(\n      dataHash: PromiseOrValue<BytesLike>,\n      signatures: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    disableModule(\n      prevModule: PromiseOrValue<string>,\n      module: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<string>;\n\n    enableModule(\n      module: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    encodeTransactionData(\n      _tx: TransactionStruct,\n      refundInfo: FeeRefundStruct,\n      _nonce: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    entryPoint(overrides?: CallOverrides): Promise<string>;\n\n    execTransaction(\n      _tx: TransactionStruct,\n      refundInfo: FeeRefundStruct,\n      signatures: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    execTransactionFromModule(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    execTransactionFromModuleReturnData(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<[boolean, string] & { success: boolean; returnData: string }>;\n\n    execTransaction_S6W(\n      _tx: TransactionStruct,\n      refundInfo: FeeRefundStruct,\n      signatures: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    executeBatchCall(\n      dest: PromiseOrValue<string>[],\n      value: PromiseOrValue<BigNumberish>[],\n      func: PromiseOrValue<BytesLike>[],\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    executeBatchCall_4by(\n      dest: PromiseOrValue<string>[],\n      value: PromiseOrValue<BigNumberish>[],\n      func: PromiseOrValue<BytesLike>[],\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    executeCall(\n      dest: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      func: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    executeCall_s1m(\n      dest: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      func: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    getChainId(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getDeposit(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getFallbackHandler(overrides?: CallOverrides): Promise<string>;\n\n    getImplementation(overrides?: CallOverrides): Promise<string>;\n\n    getModulesPaginated(\n      start: PromiseOrValue<string>,\n      pageSize: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<[string[], string] & { array: string[]; next: string }>;\n\n    getNonce(\n      batchId: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getTransactionHash(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      targetTxGas: PromiseOrValue<BigNumberish>,\n      baseGas: PromiseOrValue<BigNumberish>,\n      gasPrice: PromiseOrValue<BigNumberish>,\n      tokenGasPriceFactor: PromiseOrValue<BigNumberish>,\n      gasToken: PromiseOrValue<string>,\n      refundReceiver: PromiseOrValue<string>,\n      _nonce: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    handlePaymentRevert(\n      gasUsed: PromiseOrValue<BigNumberish>,\n      baseGas: PromiseOrValue<BigNumberish>,\n      gasPrice: PromiseOrValue<BigNumberish>,\n      tokenGasPriceFactor: PromiseOrValue<BigNumberish>,\n      gasToken: PromiseOrValue<string>,\n      refundReceiver: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    init(\n      _owner: PromiseOrValue<string>,\n      _handler: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    isModuleEnabled(\n      module: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isValidSignature(\n      _dataHash: PromiseOrValue<BytesLike>,\n      _signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    nonce(overrides?: CallOverrides): Promise<BigNumber>;\n\n    nonces(\n      arg0: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    owner(overrides?: CallOverrides): Promise<string>;\n\n    pullTokens(\n      token: PromiseOrValue<string>,\n      dest: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    requiredTxGas(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    setFallbackHandler(\n      handler: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setOwner(\n      _newOwner: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    supportsInterface(\n      _interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    transfer(\n      dest: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    updateImplementation(\n      _implementation: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    validateUserOp(\n      userOp: UserOperationStruct,\n      userOpHash: PromiseOrValue<BytesLike>,\n      missingAccountFunds: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    withdrawDepositTo(\n      withdrawAddress: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<void>;\n  };\n\n  filters: {\n    \"AccountHandlePayment(bytes32,uint256)\"(\n      txHash?: PromiseOrValue<BytesLike> | null,\n      payment?: PromiseOrValue<BigNumberish> | null\n    ): AccountHandlePaymentEventFilter;\n    AccountHandlePayment(\n      txHash?: PromiseOrValue<BytesLike> | null,\n      payment?: PromiseOrValue<BigNumberish> | null\n    ): AccountHandlePaymentEventFilter;\n\n    \"ChangedFallbackHandler(address,address)\"(\n      previousHandler?: PromiseOrValue<string> | null,\n      handler?: PromiseOrValue<string> | null\n    ): ChangedFallbackHandlerEventFilter;\n    ChangedFallbackHandler(\n      previousHandler?: PromiseOrValue<string> | null,\n      handler?: PromiseOrValue<string> | null\n    ): ChangedFallbackHandlerEventFilter;\n\n    \"DisabledModule(address)\"(module?: null): DisabledModuleEventFilter;\n    DisabledModule(module?: null): DisabledModuleEventFilter;\n\n    \"EOAChanged(address,address,address)\"(\n      _scw?: PromiseOrValue<string> | null,\n      _oldEOA?: PromiseOrValue<string> | null,\n      _newEOA?: PromiseOrValue<string> | null\n    ): EOAChangedEventFilter;\n    EOAChanged(\n      _scw?: PromiseOrValue<string> | null,\n      _oldEOA?: PromiseOrValue<string> | null,\n      _newEOA?: PromiseOrValue<string> | null\n    ): EOAChangedEventFilter;\n\n    \"EnabledModule(address)\"(module?: null): EnabledModuleEventFilter;\n    EnabledModule(module?: null): EnabledModuleEventFilter;\n\n    \"ExecutionFailure(address,uint256,bytes,uint8,uint256)\"(\n      to?: PromiseOrValue<string> | null,\n      value?: PromiseOrValue<BigNumberish> | null,\n      data?: PromiseOrValue<BytesLike> | null,\n      operation?: null,\n      txGas?: null\n    ): ExecutionFailureEventFilter;\n    ExecutionFailure(\n      to?: PromiseOrValue<string> | null,\n      value?: PromiseOrValue<BigNumberish> | null,\n      data?: PromiseOrValue<BytesLike> | null,\n      operation?: null,\n      txGas?: null\n    ): ExecutionFailureEventFilter;\n\n    \"ExecutionFromModuleFailure(address)\"(\n      module?: PromiseOrValue<string> | null\n    ): ExecutionFromModuleFailureEventFilter;\n    ExecutionFromModuleFailure(\n      module?: PromiseOrValue<string> | null\n    ): ExecutionFromModuleFailureEventFilter;\n\n    \"ExecutionFromModuleSuccess(address)\"(\n      module?: PromiseOrValue<string> | null\n    ): ExecutionFromModuleSuccessEventFilter;\n    ExecutionFromModuleSuccess(\n      module?: PromiseOrValue<string> | null\n    ): ExecutionFromModuleSuccessEventFilter;\n\n    \"ExecutionSuccess(address,uint256,bytes,uint8,uint256)\"(\n      to?: PromiseOrValue<string> | null,\n      value?: PromiseOrValue<BigNumberish> | null,\n      data?: PromiseOrValue<BytesLike> | null,\n      operation?: null,\n      txGas?: null\n    ): ExecutionSuccessEventFilter;\n    ExecutionSuccess(\n      to?: PromiseOrValue<string> | null,\n      value?: PromiseOrValue<BigNumberish> | null,\n      data?: PromiseOrValue<BytesLike> | null,\n      operation?: null,\n      txGas?: null\n    ): ExecutionSuccessEventFilter;\n\n    \"ImplementationUpdated(address,address)\"(\n      oldImplementation?: PromiseOrValue<string> | null,\n      newImplementation?: PromiseOrValue<string> | null\n    ): ImplementationUpdatedEventFilter;\n    ImplementationUpdated(\n      oldImplementation?: PromiseOrValue<string> | null,\n      newImplementation?: PromiseOrValue<string> | null\n    ): ImplementationUpdatedEventFilter;\n\n    \"ModuleTransaction(address,address,uint256,bytes,uint8)\"(\n      module?: null,\n      to?: null,\n      value?: null,\n      data?: null,\n      operation?: null\n    ): ModuleTransactionEventFilter;\n    ModuleTransaction(\n      module?: null,\n      to?: null,\n      value?: null,\n      data?: null,\n      operation?: null\n    ): ModuleTransactionEventFilter;\n\n    \"SmartAccountReceivedNativeToken(address,uint256)\"(\n      sender?: PromiseOrValue<string> | null,\n      value?: PromiseOrValue<BigNumberish> | null\n    ): SmartAccountReceivedNativeTokenEventFilter;\n    SmartAccountReceivedNativeToken(\n      sender?: PromiseOrValue<string> | null,\n      value?: PromiseOrValue<BigNumberish> | null\n    ): SmartAccountReceivedNativeTokenEventFilter;\n  };\n\n  estimateGas: {\n    VERSION(overrides?: CallOverrides): Promise<BigNumber>;\n\n    addDeposit(\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    checkSignatures(\n      dataHash: PromiseOrValue<BytesLike>,\n      signatures: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    disableModule(\n      prevModule: PromiseOrValue<string>,\n      module: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<BigNumber>;\n\n    enableModule(\n      module: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    encodeTransactionData(\n      _tx: TransactionStruct,\n      refundInfo: FeeRefundStruct,\n      _nonce: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    entryPoint(overrides?: CallOverrides): Promise<BigNumber>;\n\n    execTransaction(\n      _tx: TransactionStruct,\n      refundInfo: FeeRefundStruct,\n      signatures: PromiseOrValue<BytesLike>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    execTransactionFromModule(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    execTransactionFromModuleReturnData(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    execTransaction_S6W(\n      _tx: TransactionStruct,\n      refundInfo: FeeRefundStruct,\n      signatures: PromiseOrValue<BytesLike>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    executeBatchCall(\n      dest: PromiseOrValue<string>[],\n      value: PromiseOrValue<BigNumberish>[],\n      func: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    executeBatchCall_4by(\n      dest: PromiseOrValue<string>[],\n      value: PromiseOrValue<BigNumberish>[],\n      func: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    executeCall(\n      dest: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      func: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    executeCall_s1m(\n      dest: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      func: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    getChainId(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getDeposit(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getFallbackHandler(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getImplementation(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getModulesPaginated(\n      start: PromiseOrValue<string>,\n      pageSize: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getNonce(\n      batchId: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getTransactionHash(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      targetTxGas: PromiseOrValue<BigNumberish>,\n      baseGas: PromiseOrValue<BigNumberish>,\n      gasPrice: PromiseOrValue<BigNumberish>,\n      tokenGasPriceFactor: PromiseOrValue<BigNumberish>,\n      gasToken: PromiseOrValue<string>,\n      refundReceiver: PromiseOrValue<string>,\n      _nonce: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    handlePaymentRevert(\n      gasUsed: PromiseOrValue<BigNumberish>,\n      baseGas: PromiseOrValue<BigNumberish>,\n      gasPrice: PromiseOrValue<BigNumberish>,\n      tokenGasPriceFactor: PromiseOrValue<BigNumberish>,\n      gasToken: PromiseOrValue<string>,\n      refundReceiver: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    init(\n      _owner: PromiseOrValue<string>,\n      _handler: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    isModuleEnabled(\n      module: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isValidSignature(\n      _dataHash: PromiseOrValue<BytesLike>,\n      _signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    nonce(overrides?: CallOverrides): Promise<BigNumber>;\n\n    nonces(\n      arg0: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    owner(overrides?: CallOverrides): Promise<BigNumber>;\n\n    pullTokens(\n      token: PromiseOrValue<string>,\n      dest: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    requiredTxGas(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setFallbackHandler(\n      handler: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    setOwner(\n      _newOwner: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    supportsInterface(\n      _interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    transfer(\n      dest: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    updateImplementation(\n      _implementation: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    validateUserOp(\n      userOp: UserOperationStruct,\n      userOpHash: PromiseOrValue<BytesLike>,\n      missingAccountFunds: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n\n    withdrawDepositTo(\n      withdrawAddress: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    VERSION(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    addDeposit(\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    checkSignatures(\n      dataHash: PromiseOrValue<BytesLike>,\n      signatures: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    disableModule(\n      prevModule: PromiseOrValue<string>,\n      module: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    domainSeparator(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    enableModule(\n      module: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    encodeTransactionData(\n      _tx: TransactionStruct,\n      refundInfo: FeeRefundStruct,\n      _nonce: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    entryPoint(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    execTransaction(\n      _tx: TransactionStruct,\n      refundInfo: FeeRefundStruct,\n      signatures: PromiseOrValue<BytesLike>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    execTransactionFromModule(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    execTransactionFromModuleReturnData(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    execTransaction_S6W(\n      _tx: TransactionStruct,\n      refundInfo: FeeRefundStruct,\n      signatures: PromiseOrValue<BytesLike>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    executeBatchCall(\n      dest: PromiseOrValue<string>[],\n      value: PromiseOrValue<BigNumberish>[],\n      func: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    executeBatchCall_4by(\n      dest: PromiseOrValue<string>[],\n      value: PromiseOrValue<BigNumberish>[],\n      func: PromiseOrValue<BytesLike>[],\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    executeCall(\n      dest: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      func: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    executeCall_s1m(\n      dest: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      func: PromiseOrValue<BytesLike>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    getChainId(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getDeposit(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getFallbackHandler(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getImplementation(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getModulesPaginated(\n      start: PromiseOrValue<string>,\n      pageSize: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getNonce(\n      batchId: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getTransactionHash(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      targetTxGas: PromiseOrValue<BigNumberish>,\n      baseGas: PromiseOrValue<BigNumberish>,\n      gasPrice: PromiseOrValue<BigNumberish>,\n      tokenGasPriceFactor: PromiseOrValue<BigNumberish>,\n      gasToken: PromiseOrValue<string>,\n      refundReceiver: PromiseOrValue<string>,\n      _nonce: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    handlePaymentRevert(\n      gasUsed: PromiseOrValue<BigNumberish>,\n      baseGas: PromiseOrValue<BigNumberish>,\n      gasPrice: PromiseOrValue<BigNumberish>,\n      tokenGasPriceFactor: PromiseOrValue<BigNumberish>,\n      gasToken: PromiseOrValue<string>,\n      refundReceiver: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    init(\n      _owner: PromiseOrValue<string>,\n      _handler: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    isModuleEnabled(\n      module: PromiseOrValue<string>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isValidSignature(\n      _dataHash: PromiseOrValue<BytesLike>,\n      _signature: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    nonce(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    nonces(\n      arg0: PromiseOrValue<BigNumberish>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    pullTokens(\n      token: PromiseOrValue<string>,\n      dest: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    requiredTxGas(\n      to: PromiseOrValue<string>,\n      value: PromiseOrValue<BigNumberish>,\n      data: PromiseOrValue<BytesLike>,\n      operation: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setFallbackHandler(\n      handler: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setOwner(\n      _newOwner: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    supportsInterface(\n      _interfaceId: PromiseOrValue<BytesLike>,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    transfer(\n      dest: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    updateImplementation(\n      _implementation: PromiseOrValue<string>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    validateUserOp(\n      userOp: UserOperationStruct,\n      userOpHash: PromiseOrValue<BytesLike>,\n      missingAccountFunds: PromiseOrValue<BigNumberish>,\n      overrides?: Overrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n\n    withdrawDepositTo(\n      withdrawAddress: PromiseOrValue<string>,\n      amount: PromiseOrValue<BigNumberish>,\n      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"]}