"use strict";var o=function(s,t,r,e){if(r==="a"&&!e)throw new TypeError("Private accessor was defined without a getter");if(typeof t=="function"?s!==t||!e:!t.has(s))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?e:r==="a"?e.call(s):e?e.value:t.get(s)},n;export class EthersSigner{constructor(t,r){Object.defineProperty(this,"signerType",{enumerable:!0,configurable:!0,writable:!0,value:"ethers"}),Object.defineProperty(this,"inner",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),n.set(this,e=>{const i=parseInt(e.slice(-2),16);if(![27,28].includes(i)){const a=i+27;e=e.slice(0,-2)+a.toString(16)}return e}),this.inner=t,this.signerType=r}async getAddress(){return await this.inner.getAddress()}async signMessage(t){const r=await this.inner?.signMessage(t);return o(this,n,"f").call(this,r)}async signTypedData(t){throw new Error("signTypedData is not supported for Ethers Signer")}}n=new WeakMap;export default EthersSigner;
